Entities:
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 0, 4]
        Rotation: [0, -0, 0]
        Scale: [1, 1, 1]
      - Name: struct Grapple::CameraComponent
        Projection: 1
        Size: 10
        FOV: 90
        Near: 0.100000001
        Far: 100
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 0, -1.20000005]
        Rotation: [168.311813, -9.40043068, -68.1223984]
        Scale: [5.63262272, 8.70941257, 5.79757786]
      - Name: struct Grapple::SpriteComponent
        Color: [0, 0, 1, 2]
        TextureTiling: [1, 1]
        Texture: 5193090395626261884
        Flags: 0
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [-4.0128355, 0.29252696, 0]
        Rotation: [0, -0, 45.0000038]
        Scale: [4, 1, 1]
      - Name: struct Grapple::SpriteComponent
        Color: [1, 1, 1, 1]
        TextureTiling: [4, 1]
        Texture: 5193090395626261884
        Flags: 0
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 0, 0]
        Rotation: [0, 0, 0]
        Scale: [0, 0, 0]
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 0, 0]
        Rotation: [0, 0, 0]
        Scale: [0, 0, 0]
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 0, 0]
        Rotation: [0, 0, 0]
        Scale: [0, 0, 0]
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 0, 0]
        Rotation: [0, 0, 0]
        Scale: [0, 0, 0]
      - Name: struct Sandbox::RotatingQuadData
        RotationSpeed: 45
        PrefabHandle: 12144771466075799185
      - Name: struct Sandbox::SomeComponent
        a: 34
        b: -59
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [-3.46407223, 0.69900316, 0]
        Rotation: [0, -0, 0]
        Scale: [1.70000005, 1.70000005, 1]
      - Name: struct Grapple::SpriteComponent
        Color: [0.142348766, 0.142348766, 0.142348766, 1]
        TextureTiling: [1, 1]
        Texture: 0
        Flags: 0
      - Name: struct Grapple::SpriteLayer
        Layer: 37
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [-3.79999995, 0, 0]
        Rotation: [0, 0, 0]
        Scale: [1, 1, 1]
      - Name: struct Grapple::SpriteComponent
        Color: [1, 1, 1, 1]
        TextureTiling: [1, 1]
        Texture: 0
        Flags: 0
      - Name: struct Grapple::SpriteLayer
        Layer: 16
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [-2.66137695, 0, 0]
        Rotation: [0, -0, 0]
        Scale: [1, 1, 1]
      - Name: struct Grapple::SpriteComponent
        Color: [1, 1, 1, 1]
        TextureTiling: [1, 1]
        Texture: 0
        Flags: 0
      - Name: struct Grapple::SpriteLayer
        Layer: 35
      - Name: struct Grapple::MaterialComponent
        Material: 8220382724088785445
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [-1.53645539, 0, 0]
        Rotation: [0, -0, 0]
        Scale: [1, 1, 1]
      - Name: struct Grapple::SpriteComponent
        Color: [1, 1, 1, 1]
        TextureTiling: [1, 1]
        Texture: 0
        Flags: 0
      - Name: struct Grapple::MaterialComponent
        Material: 8220382724088785445
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 1.9316864, 0]
        Rotation: [0, -0, 0]
        Scale: [1, 1, 1]
      - Name: struct Grapple::SpriteComponent
        Color: [1, 1, 1, 1]
        TextureTiling: [1, 1]
        Texture: 0
        Flags: 0
      - Name: struct Grapple::MaterialComponent
        Material: 8220382724088785445
  - Components:
      - Name: struct Grapple::TransformComponent
        Position: [0, 0, 0]
        Rotation: [0, 0, 0]
        Scale: [1, 1, 1]
      - Name: struct Grapple::TextComponent
        Text: "#type vertex\n#version 450\n\nlayout(location = 0) in vec3 i_Position;\nlayout(location = 1) in vec4 i_Color;\nlayout(location = 2) in vec2 i_UV;\nlayout(location = 3) in int i_EntityIndex;\n\nlayout(location = 0) out vec2 UV;\nlayout(location = 1) out vec4 Color;\nlayout(location = 2) out flat int EntityIndex;\n\nstruct CameraData\n{\nvec3 Position;\n\nmat4 Projection;\nmat4 View;\nmat4 ViewProjection;\n\n    mat4 InverseProjection;\n    mat4 InverseView;\n    mat4 InverseViewProjection;\n};\n\nlayout(std140, binding = 0) uniform Camera\n{\n   CameraData u_Camera;\n};\n\nvoid main()\n{\ngl_Position = u_Camera.ViewProjection * vec4(i_Position, 1.0);\nUV = i_UV;\nColor = i_Color;\nEntityIndex = i_EntityIndex;\n}\n\n#type fragment\n#version 450\n\nlayout(location = 0) in vec2 UV;\nlayout(location = 1) in vec4 Color;\nlayout(location = 2) in flat int EntityIndex;\n\nlayout(binding = 0) uniform sampler2D msdf;\n\nlayout(location = 0) out vec4 o_Color;\nlayout(location = 1) out int o_EntityIndex;\n\nconst float pxRange = 2.0;\n\nfloat screenPxRange() {\n    vec2 unitRange = vec2(pxRange) / vec2(textureSize(msdf, 0));\n    vec2 screenTexSize = vec2(1.0) / fwidth(UV);\n    return max(0.5*dot(unitRange, screenTexSize), 1.0);\n}\n\nfloat median(float r, float g, float b) {\n    return max(min(r, g), min(max(r, g), b));\n}\n\nvoid main() {\n    vec3 msd = texture(msdf, UV).rgb;\n    float sd = median(msd.r, msd.g, msd.b);\n    float screenPxDistance = screenPxRange()*(sd - 0.5);\n    float opacity = clamp(screenPxDistance + 0.5, 0.0, 1.0);\n\nif (opacity <= 0.001)\ndiscard;\n\n    o_Color = mix(vec4(0.0), Color, opacity);\no_EntityIndex = EntityIndex;\n}\n"